{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","regexp","NewMovie","state","hasTitleError","hasImgUrlError","hasImdbUrlError","hasImdbIdError","buttonDisabled","handleChange","event","name","target","value","setState","titleValidation","imgUrlValidation","test","imdbUrlValidation","imdbIdValidation","handleSubmit","preventDefault","newMovie","props","addMovie","this","onSubmit","classNames","errorInput","type","placeholder","onChange","onBlur","hidden","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66c5960b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst regexp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    hasTitleError: false,\n    hasImgUrlError: false,\n    hasImdbUrlError: false,\n    hasImdbIdError: false,\n    buttonDisabled: false,\n  };\n\n  handleChange = (event) => {\n    const { name } = event.target;\n    const { value } = event.target;\n    const { hasTitleError,\n      hasImgUrlError,\n      hasImdbUrlError,\n      hasImdbIdError } = this.state;\n\n    switch (name) {\n      case 'title':\n        this.setState({\n          title: value,\n          hasTitleError: false,\n        });\n        break;\n      case 'description':\n        this.setState({ description: value });\n        break;\n      case 'imgUrl':\n        this.setState({\n          imgUrl: value,\n          hasImgUrlError: false,\n        });\n        break;\n      case 'imdbUrl':\n        this.setState({\n          imdbUrl: value,\n          hasImdbUrlError: false,\n        });\n        break;\n      case 'imdbId':\n        this.setState({\n          imdbId: value,\n          hasImdbIdError: false,\n        });\n        break;\n      default:\n        return;\n    }\n\n    if (!hasTitleError && !hasImgUrlError\n      && !hasImdbUrlError && !hasImdbIdError) {\n      this.setState({\n        buttonDisabled: false,\n      });\n    }\n  }\n\n  titleValidation = () => {\n    if (!this.state.title) {\n      this.setState({\n        hasTitleError: true, buttonDisabled: true,\n      });\n    }\n  }\n\n  imgUrlValidation = () => {\n    if (!regexp.test(this.state.imgUrl)) {\n      this.setState({\n        hasImgUrlError: true,\n        buttonDisabled: true,\n      });\n    }\n\n    if (!this.state.imgUrl) {\n      this.setState({\n        hasImgUrlError: true,\n        buttonDisabled: true,\n      });\n    }\n  }\n\n  imdbUrlValidation = () => {\n    if (!regexp.test(this.state.imdbUrl)) {\n      this.setState({\n        hasImdbUrlError: true,\n        buttonDisabled: true,\n      });\n    }\n\n    if (!this.state.imdbUrl) {\n      this.setState({\n        hasImdbUrlError: true,\n        buttonDisabled: true,\n      });\n    }\n  }\n\n  imdbIdValidation = () => {\n    if (!this.state.imdbId) {\n      this.setState({\n        hasImdbIdError: true,\n        buttonDisabled: true,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      hasTitleError,\n      hasImgUrlError,\n      hasImdbUrlError,\n      hasImdbIdError } = this.state;\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      this.titleValidation();\n      this.imgUrlValidation();\n      this.imdbUrlValidation();\n      this.imdbIdValidation();\n\n      return;\n    }\n\n    if (hasTitleError || hasImgUrlError || hasImdbUrlError || hasImdbIdError) {\n      this.setState({\n        buttonDisabled: true,\n      });\n\n      return;\n    }\n\n    const newMovie = {\n      title, description, imgUrl, imdbUrl, imdbId,\n    };\n\n    this.props.addMovie(newMovie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      hasTitleError: false,\n      hasImgUrlError: false,\n      hasImdbUrlError: false,\n      hasImdbIdError: false,\n      buttonDisabled: false,\n    });\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      hasTitleError,\n      hasImgUrlError,\n      hasImdbUrlError,\n      hasImdbIdError,\n      buttonDisabled } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <p>Title</p>\n        <input\n          name=\"title\"\n          className={classNames('input', { errorInput: hasTitleError })}\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={this.handleChange}\n          onBlur={this.titleValidation}\n        />\n        <span\n          className=\"error\"\n          hidden={!hasTitleError}\n        >\n          Please enter the title\n        </span>\n        <p>Description</p>\n        <input\n          name=\"description\"\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={this.handleChange}\n        />\n        <p>Image Url</p>\n        <input\n          name=\"imgUrl\"\n          className={classNames('input', { errorInput: hasImgUrlError })}\n          type=\"text\"\n          placeholder=\"Image\"\n          value={imgUrl}\n          onChange={this.handleChange}\n          onBlur={this.imgUrlValidation}\n        />\n        <span\n          className=\"error\"\n          hidden={!hasImgUrlError}\n        >\n          Please enter valid image url\n        </span>\n        <p>IMDB Url</p>\n        <input\n          name=\"imdbUrl\"\n          className={classNames('input', { errorInput: hasImdbUrlError })}\n          type=\"text\"\n          placeholder=\"IMDB\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n          onBlur={this.imdbUrlValidation}\n        />\n        <span\n          className=\"error\"\n          hidden={!hasImdbUrlError}\n        >\n          Please enter valid imdb url\n        </span>\n        <p>IMDB Id</p>\n        <input\n          name=\"imdbId\"\n          className={classNames('input', { errorInput: hasImdbIdError })}\n          type=\"text\"\n          placeholder=\"Id\"\n          value={imdbId}\n          onChange={this.handleChange}\n          onBlur={this.imdbIdValidation}\n        />\n        <span\n          className=\"error\"\n          hidden={!hasImdbIdError}\n        >\n          Please enter the id\n        </span>\n        <button\n          className=\"button\"\n          type=\"submit\"\n          disabled={buttonDisabled}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [movie, ...state.movies],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}